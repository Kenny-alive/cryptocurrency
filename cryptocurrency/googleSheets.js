import { google } from 'googleapis';
import { GoogleAuth } from 'google-auth-library';
import dotenv from 'dotenv';

dotenv.config();

async function getSpreadsheetData(spreadsheetId, range) {
  const auth = new GoogleAuth({
    keyFile: 'service-account.json',
    scopes: ['https://www.googleapis.com/auth/spreadsheets'],
  });

  const client = await auth.getClient();
  const googleSheets = google.sheets({ version: 'v4', auth: client });

  const response = await googleSheets.spreadsheets.values.get({
    spreadsheetId,
    range,
  });

  return response.data.values || [];
}

async function accessGoogleSheets() {
  const mainSpreadsheetId = process.env.SPREADSHEET_ID; // –ò–∑ .env
  const mainRange = 'Sheet1!A1:D10';

  console.log(`üìÑ –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ –≥–ª–∞–≤–Ω–æ–π —Ç–∞–±–ª–∏—Ü—ã (${mainSpreadsheetId})...`);
  const mainData = await getSpreadsheetData(mainSpreadsheetId, mainRange);

  console.table(mainData);

  // –ò—â–µ–º —Å—Å—ã–ª–∫–∏ –Ω–∞ –¥—Ä—É–≥–∏–µ —Ç–∞–±–ª–∏—Ü—ã
  for (const row of mainData) {
    const link = row[1]; // –°—á–∏—Ç–∞–µ–º, —á—Ç–æ —Å—Å—ã–ª–∫–∞ –≤–æ –≤—Ç–æ—Ä–æ–π –∫–æ–ª–æ–Ω–∫–µ
    if (link && link.includes('/spreadsheets/d/')) {
      const match = link.match(/\/d\/([a-zA-Z0-9-_]+)/);
      if (match) {
        const spreadsheetId = match[1];
        console.log(`üîó –ù–∞–π–¥–µ–Ω–∞ –≤–ª–æ–∂–µ–Ω–Ω–∞—è —Ç–∞–±–ª–∏—Ü–∞: ${spreadsheetId}`);
        const nestedData = await getSpreadsheetData(spreadsheetId, 'Sheet1!A1:Z100');
        console.log(`üìä –î–∞–Ω–Ω—ã–µ –∏–∑ —Ç–∞–±–ª–∏—Ü—ã ${spreadsheetId}:`);
        console.table(nestedData);
      }
    }
  }
}

accessGoogleSheets();

